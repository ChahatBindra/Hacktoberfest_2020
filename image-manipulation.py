# -*- coding: utf-8 -*-
"""Image_manipulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11JQf6vCTNGGJxXCWhVDp0LmQRdXJBVMq

Image Manipulations

1. Converting image data structures:

a) Create a numpy array from the Image object. You can read an image using PIL and
convert it to numpy array
"""

pip install Pillow

import PIL
from PIL import Image

!wget "https://www.desktopbackground.org/download/480x800/2014/12/22/875067_images-of-koala-bears-wallpapers-1080p_2355x2121_h.jpg"

image=Image.open("/content/875067_images-of-koala-bears-wallpapers-1080p_2355x2121_h.jpg")
image.show()

from matplotlib import image
from matplotlib import pyplot
image=image.imread("/content/875067_images-of-koala-bears-wallpapers-1080p_2355x2121_h.jpg")
pyplot.imshow(image)
pyplot.show()

image.shape

from numpy import asarray
data=asarray(image)

data

data.shape

"""b) Reverse: Convert from numpy array into a PIL Image object."""

import numpy as np

from numpy import asarray
data=asarray(image)

img=Image.fromarray(data)
img.save("newpic.jpg")

pyplot.imshow(img)
pyplot.show()

"""2. Converting from one file format to another. Read an image in one file format and
save it to another: for example, from PNG to JPG.
"""

!wget "https://tinypng.com/images/social/website.jpg"

img=Image.open("/content/website.jpg").convert("RGB")
img.save("/content/website.jpg")

pyplot.imshow(img)
pyplot.show()

"""3. Cropping an Image: Take any RGB image as input and crop that image. Show input
and output both together

a) Using direct function in Python
"""

#im = Image.open("/content/rgb_image.png") 
#im.show()
#pyplot.imshow(im)
#pyplot.show()

from PIL import Image 
im = Image.open(r"/content/newpic.jpg") 
left = 155
top = 65
right = 360
bottom = 270
im1 = im.crop((left, top, right, bottom)) 
im1.show()

pyplot.imshow(im)
pyplot.show()
pyplot.imshow(im1)
pyplot.show()

"""b) Write your program using arrays and matrices. This is required to make you
familiar with images and their dimensions
"""

from numpy import asarray
import matplotlib.pyplot as plt
a=asarray(im1)

import numpy as np

cropped=a[128:384,5:164]

plt.imshow(cropped)

"""4. Negative of an image: Write a program to obtain negative of an image. Do not use
any direct function. Suppose the intensity values of your input image vary from 0-255.
Negative of an image can be obtained using following formula, where y is the intensity
value of a pixel in output image and x is the intensity value of same pixel in input
image.
y = 255 - x
"""

import cv2 
import matplotlib.pyplot as plt 
  
  
# Read an image 
img_bgr = cv2.imread('/content/website.jpg', 1) 
  
plt.imshow(img_bgr) 
plt.show()  
color = ('b', 'g', 'r') 
  
for i, col in enumerate(color): 
      
    histr = cv2.calcHist([img_bgr], 
                         [i], None, 
                         [256], 
                         [0, 256]) 
      
    plt.plot(histr, color = col)  
    plt.xlim([0, 256]) 
      
plt.show()  
img_neg = 1 - img_bgr 
  
plt.imshow(img_neg) 
plt.show()  
color = ('b', 'g', 'r') 
  
for i, col in enumerate(color): 
      
    histr = cv2.calcHist([img_neg], 
                         [i], None,  
                         [256], 
                         [0, 256]) 
      
    plt.plot(histr, color = col) 
    plt.xlim([0, 256]) 
      
plt.show()

"""5. Creating a circular mask on the input image. The example of output image is below.
Hint: Slicing and masking with numpy arrays can be used to create a circular mask on
the input image.
"""

import scipy
import scipy.misc
import matplotlib.pyplot as plt

face = scipy.misc.face(gray=True)
face[10:13, 20:23]
face[100:120] = 255

lx, ly = face.shape
X, Y = np.ogrid[0:lx, 0:ly]
mask = (X - lx/2)**2 + (Y - ly/2)**2 > lx*ly/4
face[mask] = 0
face[range(400), range(400)] = 255

plt.figure(figsize=(3, 3))
plt.axes([0, 0, 1, 1])
plt.imshow(face, cmap=plt.cm.gray)
plt.axis('off')

plt.show()

"""6. Reading and displaying multiple images at once"""

from IPython.display import Image
from IPython.display import display

x = Image.open('/content/website.jpg') 
y = Image.open('/content/newpic.jpg') 
display(x, y)

"""7. Create a thumbnail from an image"""

from PIL import Image

image=Image.open(r"/content/newpic.jpg")

imageT=Image.open(r"/content/newpic.jpg")
MAX_SIZE=(100,100)
imageT.thumbnail(MAX_SIZE)
imageT.save('veggiesthumb.jpg')
imageT.show()

display(image,imageT)

first_image = Image.open("/content/newpic.jpg")
second_image = Image.open("/content/veggiesthumb.jpg")
first_image.paste(second_image, (20,20))
display(first_image)

